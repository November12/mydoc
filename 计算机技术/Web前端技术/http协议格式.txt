1. HTTP概述
  HTTP协议是一种请求/响应协议。浏览器 "请求" Web服务器, Web服务器 "响应" 浏览器。
  HTTP协议是一种文本协议，也必须是一种文本协议。这样才能确保通用性和兼容性。
  HTTP是一种无状态协议，它不维护连接的状态信息。
  HTTP不维护与客户方的连接，它使用可靠的TCP连接，通常采用TCP 80端口。
  HTTP使用TCP而不是UDP的原因在于（打开一个）一个网页必须传送很多数据，而TCP协议提供传输控制，按顺序组织数据，和错误纠正。
  


2. 浏览器请求
  浏览器请求包括三部分信息: 请求方法、请求头、请求数据。
  2.1、请求方法
    GET		  请求指定的文档
    HEAD		仅请求文档头
    POST		请求服务器接收指定文档作为可执行的信息
    PUT		  用从客户端传送的数据取代指定文档中的内容
    DELETE	请求服务器删除指定页面
    OPTIONS	允许客户端查看服务器的性能
    TRACE		用于测试―允许客户端查看消息回收过程

  2.2、请求头
    头信息是可选项，它用于向服务器提供客户端的其他信息。

  2.3、请求数据
    正文

  2.4、样例
    GET /servlet/default.jsp HTTP/1.1                        -> 1. 方法 + url + 协议/版本
    Accept: text/plain; text/html                            -> 2. 请求头
    Accept-Language: en-gb  
    Connection: Keep-Alive  
    Host: localhost   
    Referer: http://localhost/ch8/SendDetails.htm   
    User-Agent: Mozilla/4.0 (compatible; MSIE 4.01; Windows 98) 
    Content-Length: 33   
    Content-Type: application/x-www-form-urlencoded  
    Accept-Encoding: gzip, deflate                           -> 连续的两个CRLF，代表请求头结束，
      
    userName=JavaJava&userID=javaID                          -> 3. 正文
    
  2.5 url
    http中有个很重要的概念，就是url。url完整地指定了要访问的网络资源。
    通常使用的方法是GET和POST。
    GET是只读资源的，且提交的参数放在url后面，长度有限制。(<=4096)
    POST可以修改资源，参数放到正文里，长度没有限制。



3. 服务器响应
  服务器响应包括三部分: 状态码、响应头、响应数据
  3.1 状态码
    详见附一

  3.2 响应头
    Server				    Web服务器信息
    Date					    当前日期/时间
    Last Modified		  请求文档最近修改时间
    Expires				    请求文档过期时间
    Content-length	  数据长度(字节)
    Content-type		  数据MIME类型
    WWW-authenticate	用于通知客户方需要的认证信息(如用户名、口令等)

  3.3 响应数据
    如果有浏览器请求的数据，数据放在响应头的后面。
    数据部分，要与前面头部空一行

  3.4 样例
    HTTP/1.1 200 OK                                     -> 响应状态
    Server: Microsoft-IIS/4.0                           -> 响应头
    Date: Mon, 3 Jan 1998 13:13:33 GMT 
    Content-Type: text/html  
    Last-Modified: Mon, 11 Jan 1998 13:23:42 GMT 
    Content-Length: 112                                 -> 同样，也是连续两个CRLF代表结束
      
    <html>                                              -> 正文，这里是html
      <head>  
        <title>HTTP应答示例</title>
      </head>
      <body>Hello HTTP!</body> 
    </html>

    
    
    
    
附一: 状态码
  "100" : Continue 
  "101" : witching Protocols 
  "200" : OK 
  "201" : Created 
  "202" : Accepted 
  "203" : Non-Authoritative Information 
  "204" : No Content 
  "205" : Reset Content 
  "206" : Partial Content 
  "300" : Multiple Choices 
  "301" : Moved Permanently 
  "302" : Found 
  "303" : See Other 
  "304" : Not Modified 
  "305" : Use Proxy 
  "307" : Temporary Redirect 
  "400" : Bad Request 
  "401" : Unauthorized 
  "402" : Payment Required 
  "403" : Forbidden 
  "404" : Not Found 
  "405" : Method Not Allowed 
  "406" : Not Acceptable 
  "407" : Proxy Authentication Required 
  "408" : Request Time-out 
  "409" : Conflict 
  "410" : Gone 
  "411" : Length Required 
  "412" : Precondition Failed 
  "413" : Request Entity Too Large 
  "414" : Request-URI Too Large 
  "415" : Unsupported Media Type 
  "416" : Requested range not satisfiable 
  "417" : Expectation Failed 
  "500" : Internal Server Error 
  "501" : Not Implemented 
  "502" : Bad Gateway 
  "503" : Service Unavailable 
  "504" : Gateway Time-out 
  "505" : HTTP Version not supported 




