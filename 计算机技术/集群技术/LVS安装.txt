1. 安装
  下载源码包 wget http://www.linuxvirtualserver.org/software/kernel-2.6/ipvsadm-1.24.tar.gz
  tar -xzf ipvsadm-1.24.tar.gz
  cd ipvsadm-1.24
  解压后修改ipvsadm-1.24的根目录和libipvs目录的Makefile文件
    根目录
      INCLUDE         = -I/usr/src/kernels/2.6.9-22.EL-i686/include -I.. -I.
      #INCLUDE        = -I/usr/src/linux/include -I.. -I.
    libipvs目录
      INCLUDE         = -I/usr/src/kernels/2.6.9-22.EL-i686/include
      #INCLUDE        = -I/usr/src/linux/include
  make
  make install        # 默认安装在/sbin目录下
  
  
2. NAT方式
  常见参数说明，见附一
  其中director需要有两块网卡
  director: 202.99.59.110, 192.168.10.254
  RIP1: 192.168.10.1, 192.168.10.2, 192.168.10.3
  
  director配置:
    ipvsadm -C                                                    # 清除ipvsadm表
    ipvsadm -A -t 202.99.59.110:80 -s rr                          # 添加virtual service，并设置调度方式rr
    ipvsadm -a -t 202.99.59.110:80 -r 192.168.10.1:80 -m -w 1     # 添加real server
    ipvsadm -a -t 202.99.59.110:80 -r 192.168.10.2:80 -m -w 1
  
  realserver配置:
    所有realserver网关设置为192.168.10.254，并分别启动apache服务。
    
  使用服务后，在director上，直接执行ipvsadm命令，会得到类似结果, 说明已经运行成功
    IP Virtual Server version 1.0.12 (size=4096)
    Prot LocalAddress:Port Scheduler Flags
    -> RemoteAddress:Port           Forward Weight ActiveConn InActConn
    TCP 202.99.59.110:http rr
    -> 192.168.10.1:http           Masq    1      0          33        
    -> 192.168.10.2:http           Masq    1      0          33       


3. DR方式
  DR是通过数据链路层实现的。因此，director和realserver必须在同一交换机下面。

  director: VIP:202.99.59.110; DIP:202.99.59.109
  RIP1:     VIP:202.99.59.110; RIP:202.99.59.108
  RIP2:     VIP:202.99.59.110; RIP:202.99.59.107
  
  director配置:
    修改内核参数(/etc/sysctl.conf)
      net.ipv4.ip_forward = 0                         # 关闭内核路由转发
      net.ipv4.conf.all.send_redirects = 1            
      net.ipv4.conf.default.send_redirects = 1
      net.ipv4.conf.eth0.send_redirects = 1
      sysctl -p     # 立即生效
    配置VIP地址
      /sbin/ifconfig eth0:0 202.99.59.110 broadcast 202.99.59.110 netmask 255.255.255.255 up
      /sbin/route add -host 202.99.59.110 dev eth0:0
    LVS配置
      ipvsadm -C
      ipvsadm -A -t 192.168.1.110:80 -s rr
      ipvsadm -a -t 192.168.1.110:80 -r 192.168.1.12 -g -w 1
      ipvsadm -a -t 192.168.1.110:80 -r 192.168.1.12 -g -w 1
  
  realserver配置
    修改内核参数(/etc/sysctl.conf)
      net.ipv4.ip_forward = 0
      net.ipv4.conf.lo.arp_ignore = 1
      net.ipv4.conf.lo.arp_announce = 2
      net.ipv4.conf.all.arp_ignore = 1
      net.ipv4.conf.all.arp_announce = 2
      sysctl -p
    配置VIP地址：
      /sbin/ifconfig lo:0 202.99.59.110 broadcast 202.99.59.110 netmask 255.255.255.255 up      # 不能将vip设置在eth0上，否则会导致arp混乱。
      /sbin/route add -host 202.99.59.110 dev lo:0
      
      


      
4. 


-A 增加一个虚拟服务，该服务由协议、IP地址和端口号组成，例如：
-A -t 202.99.59.110:80 (增加一格虚拟服务，其协议(-t表示tcp，-u表示udp)为TCP、IP为202.99.59.110、端口号为80。

-s 指定服务采用的算法，常用的算法参数如下：

rr   轮叫（Round Robin）
调度器通过"轮叫"调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务 器，而不管服务器上实际的连接数和系统负载。

wrr   加权轮叫（Weighted Round Robin）
调度器通过"加权轮叫"调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。

lc   最少链接（Least Connections）
调度器通过"最少连接"调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用"最小连接"调度算法可以较好地均衡负载。

wlc   加权最少链接（Weighted Least Connections）
在集群系统中的服务器性能差异较大的情况下，调度器采用"加权最少链接"调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。

lblc   基于局部性的最少链接（Locality-Based Least Connections）
"基于局部性的最少链接" 调度算法是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。该算法根据请求的目标IP地址找出该目标IP地址最近使用的服务器，若该服务器是可用的且没有超载，将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，则用"最少链接"的原则选出一个可用的服务器，将请求发送到该服务器。

lblcr   带复制的基于局部性最少链接（Locality-Based Least Connections with Replication）
"带复制的基于局部性最少链接"调度算法也是针对目标IP地址的负载均衡，目前主要用于Cache集群系统。它与LBLC算法的不同之处是它要维护从一个目标IP地址到一组服务器的映射，而LBLC算法维护从一个目标IP地址到一台服务器的映射。该算法根据请求的目标IP地址找出该目标IP地址对应的服务器组，按"最小连接"原则从服务器组中选出一台服务器，若服务器没有超载，将请求发送到该服务器，若服务器超载；则按"最小连接"原则从这个集群中选出一台服务器，将该服务器加入到服务器组中，将请求发送到该服务器。同时，当该服务器组有一段时间没有被修改，将最忙的服务器从服务器组中删除，以降低复制的程度。

dh   目标地址散列（Destination Hashing）
"目标地址散列"调度算法根据请求的目标IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。

sh   源地址散列（Source Hashing）
"源地址散列"调度算法根据请求的源IP地址，作为散列键（Hash Key）从静态分配的散列表找出对应的服务器，若该服务器是可用的且未超载，将请求发送到该服务器，否则返回空。 
/sbin/ipvsadm -a -t 192.168.1.110:http -r 192.168.1.12 -g -w 1

-a 表示往一个服务内增加一个real server

-r 指定real server的IP地址

-w 表示权重

-g 表示使用DR方式，-m表示NAT方式，-i表示tunneling方式。




    
    
    
    
    
    
    
    
    


附一. 常见参数
  --add-service     -A        add virtual service with options
  --edit-service    -E        edit virtual service with options
  --delete-service  -D        delete virtual service
  --clear           -C        清除ipvsadm表
  --restore         -R        restore rules from stdin
  --save            -S        save rules to stdout
  --add-server      -a        add real server with options
  --edit-server     -e        edit real server with options
  --delete-server   -d        delete real server
  --list            -L|-l     list the table
  --zero            -Z        zero counters in a service or all services
  --set tcp tcpfin udp        set connection timeout values
  --start-daemon              start connection sync daemon
  --stop-daemon               stop connection sync daemon
  --help            -h        display this help message

Options:
  --tcp-service  -t service-address   tcp service
  --udp-service  -u service-address   service-address is host[:port]
  --fwmark-service  -f fwmark         fwmark is an integer greater than zero
  --scheduler    -s scheduler         调度方式， 
                                      one of rr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq,
                                      the default scheduler is wlc.
  --persistent   -p [timeout]         persistent service
  --netmask      -M netmask           persistent granularity mask
  --real-server  -r server-address    server-address is host (and port)
  --gatewaying   -g                   gatewaying (direct routing) (default)
  --ipip         -i                   ipip encapsulation (tunneling)
  --masquerading -m                   masquerading (NAT)
  --weight       -w weight            capacity of real server
  --u-threshold  -x uthreshold        upper threshold of connections
  --l-threshold  -y lthreshold        lower threshold of connections
  --mcast-interface interface         multicast interface for connection sync
  --syncid sid                        syncid for connection sync (default=255)
  --connection   -c                   output of current IPVS connections
  --timeout                           output of timeout (tcp tcpfin udp)
  --daemon                            output of daemon information
  --stats                             output of statistics information
  --rate                              output of rate information
  --exact                             expand numbers (display exact values)
  --thresholds                        output of thresholds information
  --persistent-conn                   output of persistent connection info
  --sort                              sorting output of service/server entries
  --numeric      -n                   numeric output of addresses and ports
  
  
  


