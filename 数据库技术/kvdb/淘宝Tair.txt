  并不算很有新意的结构，很多思想都来源于hadoop。
  其中的亮点在于，对于存储引擎的抽象，以及各种存储上，下了些功夫。
  http://tair.taobao.org/

1. Tair介绍
  1.1 需求
    分布式KV存储
    可做缓存，也可做持久化
    记录数   百亿级
    QPS      百万级
    
  1.2 接口特性
    Namespace         避免Key的冲突
    Version           避免并发更新
    Expire            Key失效时间控制
    
  1.3 系统特性
    支持多种存储引擎
    基于异步复制的多副本
    多机架和多数据中心
    自动数据复制和迁移
    
  1.4 API
    get/put/delete
    incr/decr
    mget/mdelete
    get_items/add_items/remove_items
    
    
2. Tair架构
  Tair由config server和data server组成，标准的namenode + datanode结构。
  2.1 config server
    config server负责维护data server的状态(心跳)。config server是单点，通过master - slave保证其可用性。
    
  2.2 data server
    data server负责提供数据，所有的data server都是对等的。
  
    dataserver将存储引擎单独抽象出来，可以挂接多种存储。
      mdb: 类似memcached，但可以share memory，这对升级应用程序来说，非常方便。
      rdb: 采用了redis，和mdb相比，有着复杂的数据结构。
      ldb: 采用level在做持久化。
      fdb: 索引和数据分离，确保索引尽可能在内存。
      

    
    

