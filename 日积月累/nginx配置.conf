
#运行用户
#user  nobody;

#启动进程,通常设置成和cpu的数量相等
worker_processes  1;      # 名字是processes，指的是进程数

#全局错误日志及PID文件(除此之外，别的地方还有日志文件描述, access_log)
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use   epoll;                # 不用多说了，这是和apache最大不同的地方，也是nginx受欢迎的原因，windows版本可以使用iocp
    worker_connections  1024;   # 单个后台worker process进程的最大并发链接数
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    # 1. 设定mime类型,类型由mime.type文件定义
    include       mime.types;
    default_type  application/octet-stream;

    # 2. 设置日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # 3. 访问的日志
    #access_log  logs/access.log  main;

    # 4. io相关的，还不是很清楚
    sendfile        on;
    #tcp_nopush     on;

    # 4.连接超时时间(秒)
    #keepalive_timeout  0;
    keepalive_timeout  65;

    # 5. 开启gzip压缩
    #gzip  on;

    # 6. 服务器相关配置
    server {
        listen       80;   
        server_name  localhost;                     #定义使用www.xx.com访问

        #charset koi8-r;                            # 字符集

        #access_log  logs/host.access.log  main;    # 访问日志

        location / {
            root   html;                            # 默认网站根目录位置
            index  index.html index.htm;            # 默认首页索引文件的名称
        }

        #error_page  404              /404.html;    

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;    # 错误提示页面
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # PHP 脚本请求全部转发到FastCGI处理. 使用FastCGI默认配置
        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    
    # 设定http服务器，利用它的反向代理功能提供负载均衡支持
    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
